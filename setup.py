import setuptools
import sys
import os

with open("dbdreader/__init__.py", "r") as fh:
    VERSION = fh.readline().strip().split("=")[1].replace('"', '')

with open("README.rst", "r") as fh:
    long_description = fh.read()
    
with open('requirements.txt') as fh:
    install_requires = [line.strip() for line in fh]


# Now determine what we need to build ourselves.    
sources = ["extension/py_dbdreader.c",
           "extension/dbdreader.c",
           "extension/decompress.c"]
include_dirs = ['extension/include']
library_dirs = []

if sys.platform == 'linux':
    # we can check for a system-wide installed library of lz4
    liblz4_found = os.system('./checkliblz4.sh')==0
elif sys.platform.startswith("win"):
    liblz4_found=False
else:
    liblz4_found=False

if liblz4_found:
    # We are on a linux platform, and have access to system-wide
    # installed library of lz4.
    libraries = ['lz4']
else:
    # we need to integrate the lz4 code in our build.
    sources += ["lz4/lz4.c"]
    libraries = []
    include_dirs += ['lz4/include']
    
setuptools.setup(
    name="dbdreader",
    version=VERSION,
    author="Lucas Merckelbach",
    author_email="lucas.merckelbach@hereon.de",
    description="A python module to access binary data files generated by Teledyne WebbResearch gliders",
    long_description=long_description,
    long_description_content_type="text/x-rst",
    url='https://dbdreader.readthedocs.io/en/latest/',
    packages=['dbdreader'],
    py_modules=[],
    entry_points = {'console_scripts':['dbdrename=dbdreader.scripts:dbdrename',
                                        'cac_gen=dbdreader.scripts:cac_gen'],
                    'gui_scripts':[]
    },
    scripts = [],
    install_requires = install_requires,
    ext_modules = [
           setuptools.Extension("_dbdreader",
                                sources = sources,
                                libraries = libraries,
                                include_dirs = include_dirs, 
                                library_dirs = library_dirs)
    ],
    classifiers=[
        "Programming Language :: Python :: 3",
        'Intended Audience :: Science/Research',
        'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',
        "Operating System :: POSIX",
    ],
)
